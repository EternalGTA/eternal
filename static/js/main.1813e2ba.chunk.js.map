{"version":3,"sources":["pages/Home/index.tsx","img/blanc.png","components/Header.tsx","pages/Lobby/index.tsx","components/Card.tsx","pages/Mod/index.tsx","utils/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["buttons","redirection","Home","className","Grid","container","spacing","xs","md","columns","sm","map","element","index","item","href","Header","React","useState","scrolled","setScrolled","handleScroll","offset","window","scrollY","useEffect","addEventListener","navbarClasses","push","join","alt","src","logo","Lobby","mods","loading","colorCode","ModCard","card","style","boxShadow","at","status","imageUrl","name","activate","disabled","onClick","open","url","STATUS","Mod","setMods","setLoading","axios","get","appSettings","then","data","catch","err","console","log","mod","description","App","path","replace","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.1813e2ba.chunk.js","sourcesContent":["import { Button, Grid } from \"@mui/material\";\r\n\r\nconst buttons: Array<string> = [\r\n    \"Home\",\r\n    \"Lobby\",\r\n    \"Mod Menus\",\r\n    \"Youtube\",\r\n    \"Discord\"\r\n]\r\n\r\nconst redirection: Array<string> = [\r\n    \"\",\r\n    \"lobby\",\r\n    \"mod-menu\",\r\n    \"ytb\",\r\n    \"discord\"\r\n];\r\n\r\nexport function Home() {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"home-title\"><h1>ETERNAL GTA</h1></div>\r\n            <Grid className=\"home\" container spacing={{ xs: 2, md: 5 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                {buttons.map((element, index) => (\r\n                    <Grid item key={index}>\r\n                        <a href={\"/#/\" + redirection[index]} className=\"menu-button\">{element}</a>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/blanc.5dde4282.png\";","import React, { useEffect } from 'react';\r\nimport \"./Header.css\";\r\nimport logo from \"../img/blanc.png\";\r\n\r\nexport default function Header(): JSX.Element {\r\n\tconst [scrolled, setScrolled] = React.useState(false);\r\n\tconst handleScroll = () => {\r\n\t\tconst offset = window.scrollY;\r\n\t\tif (offset > 1) {\r\n\t\t\tsetScrolled(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetScrolled(false);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', handleScroll)\r\n\t})\r\n\tlet navbarClasses = ['navbar'];\r\n\tif (scrolled) {\r\n\t\tnavbarClasses.push('scrolled');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className={navbarClasses.join(\" \")}>\r\n\t\t\t<div className=\"logo\">\r\n\t\t\t\t<img alt=\"\" src={logo}></img>\r\n\t\t\t</div>\r\n\t\t\t<nav className=\"navigation\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><a href=\"#/\">Home</a></li>\r\n\t\t\t\t\t<li><a href=\"#/lobby\">Lobby</a></li>\r\n\t\t\t\t\t<li><a href=\"#/mod-menu\">Mod Menus</a></li>\r\n\t\t\t\t\t<li><a href=\"#/ytb\">Youtube</a></li>\r\n\t\t\t\t\t<li><a href=\"#/discord\">Discord</a></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n}","import React, { useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\n\r\nexport function Lobby() {\r\n    const [mods, setMods] = useState<Array<number>>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n    React.useEffect(() => {\r\n        \r\n    }, []);\r\n    if (!loading && !mods) {\r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    <Header></Header>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"center\">\r\n                        Loading Lobbys...\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\"></div>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"header\">\r\n                <Header></Header>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"center\">\r\n                    <div className=\"container\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">Copyright - Eternal</div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { STATUS } from \"../pages/Mod\";\r\nimport \"./Card.css\";\r\n\r\ninterface cardProps {\r\n\tname: string,\r\n\tdescription: string,\r\n\turl: string,\r\n\timageUrl: string,\r\n\tactivate: boolean,\r\n\tstatus: STATUS\r\n};\r\n\r\nconst colorCode = [\"#0F0\", \"#F00\", \"#fabe58\", \"#0080FF\"];\r\n\r\nconst ModCard: React.FC<cardProps> = (card: cardProps) => {\r\n\tfunction downloadMod() {\r\n\t\tif (!card.activate) return;\r\n\t\twindow.open(card.url);\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card\" style={{boxShadow: `1px 1px 2px 1px ${colorCode.at(card.status)}`}}>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<div className=\"card-body-image\">\r\n\t\t\t\t\t\t<img className=\"card-img\" src={card.imageUrl} alt={card.name} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t<div className=\"card-name\">\r\n\t\t\t\t\t\t{card.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-footer\">\r\n\t\t\t\t\t<div className=\"card-button\">\r\n\t\t\t\t\t\t{card.activate ? <button className={`btn download-btn ` + (card.activate ? \"\" : \"disabled\")} disabled={!card.activate}\r\n\t\t\t\t\t\t\tonClick={downloadMod}>\r\n\t\t\t\t\t\t\tDownload\r\n\t\t\t\t\t\t</button> : \"\"}\r\n\t\t\t\t\t\t<button className=\"btn preview-btn\">Preview</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ModCard;","import React, { useState } from \"react\";\r\nimport ModCard from \"../../components/Card\"\r\nimport Header from \"../../components/Header\";\r\nimport { getMods } from \"../../utils\";\r\nimport \"../index.css\";\r\nimport \"./index.css\";\r\n\r\nexport enum STATUS {\r\n    UNDETECT,\r\n    DETECT,\r\n    RISKY,\r\n    UPDATING\r\n}\r\n\r\ninterface cardProps {\r\n\tname: string,\r\n\tdescription: string,\r\n\turl: string,\r\n\timageUrl: string,\r\n\tactivate: boolean,\r\n    status: STATUS\r\n};\r\n\r\nexport function Mod(): JSX.Element {\r\n    const [mods, setMods] = useState<Array<cardProps>>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n    React.useEffect(() => {\r\n        getMods().then(({data}) => {\r\n            setMods(data);\r\n            setLoading(false);\r\n        }).catch(err => console.log(err));\r\n    }, []);\r\n    if (!loading && !mods) {\r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    <Header></Header>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"center\">\r\n                        Loading Menus...\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\"></div>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"header\">\r\n                <Header></Header>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"center\">\r\n                    <div className=\"legend\" /* style={{\"lineHeight\": `${window.innerHeight}px`}} */>\r\n                        <div>Undetect</div>\r\n                        <div>Detect</div>\r\n                        <div>Risky</div>\r\n                        <div>Updating</div>\r\n                    </div>\r\n                    <div>\r\n                        <h1>LES MODS MENUS GRATUITS</h1>\r\n                        <p>\r\n                            Vous trouverez ici les différents mods menus que je présente sur ma chaîne.<br/>\r\n                            Pour savoir comment installer un menu, n'hésitez pas à cliquer sur Preview,<br/>\r\n                            vous aurez par la suite un tutoriel pour l'installer et une vidéo showcase.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        {mods.map((mod) => (\r\n                            <ModCard \r\n                                key={mod.name}\r\n                                name={mod.name} \r\n                                description={mod.description}\r\n                                url={mod.url}\r\n                                imageUrl={mod.imageUrl}\r\n                                activate={mod.activate}\r\n                                status={mod.status}\r\n                            ></ModCard>\r\n                        ))}\r\n                        {mods.map((mod) => (\r\n                            <ModCard \r\n                                key={mod.name}\r\n                                name={mod.name} \r\n                                description={mod.description}\r\n                                url={mod.url}\r\n                                imageUrl={mod.imageUrl}\r\n                                activate={mod.activate}\r\n                                status={mod.status}\r\n                            ></ModCard>\r\n                        ))}\r\n                        {mods.map((mod) => (\r\n                            <ModCard \r\n                                key={mod.name}\r\n                                name={mod.name} \r\n                                description={mod.description}\r\n                                url={mod.url}\r\n                                imageUrl={mod.imageUrl}\r\n                                activate={mod.activate}\r\n                                status={mod.status}\r\n                            ></ModCard>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">Copyright - Eternal</div>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport appSettings from \"../app_settings.json\";\r\n\r\nexport function getMods() {\r\n    return axios.get(`${appSettings.url}/api/menu`)\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport { Home, Lobby, Mod } from './pages';\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <div className=\"app\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/lobby\" element={<Lobby />} />\r\n          <Route path=\"/discord\" element={<Navigate replace to=\"\" />} />\r\n          <Route path=\"/mod-menu\" element={<Mod />} />\r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from '@mui/material';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst darkTheme = createTheme({\r\n\tpalette: {\r\n\t\tmode: 'dark',\r\n\t},\r\n\t//spacing: 2\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\t\t<ThemeProvider theme={darkTheme}>\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<App></App>\r\n\t\t\t</HashRouter>\r\n\t\t</ThemeProvider>\r\n\t</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}